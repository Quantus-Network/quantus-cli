---
name: Continuous Integration

on:
  pull_request:
    paths-ignore:
      - "docs/**"
      - "*.md"
      - "LICENSE"
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "*.md"
      - "LICENSE"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always

jobs:
  fast-checks:
    name: üèÅ Fast Checks (Format)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
      - name: Install required components
        run: rustup component add rustfmt
      - name: Install taplo
        run: cargo install taplo-cli --locked
      - name: Run format checks
        run: |
          taplo format --check --config taplo.toml
          cargo fmt --all -- --check

  build-and-test-matrix:
    name: üõ†Ô∏è Build & Test Matrix
    needs: fast-checks
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update -yqq
          sudo apt-get install -yqq --no-install-recommends \
            libclang-dev \
            protobuf-compiler
      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install protobuf
      - name: Build
        run: cargo build --locked --release
      - name: Test
        run: cargo test --locked --release

  analysis:
    name: ü§ñ Analysis (Clippy & Doc)
    needs: fast-checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
      - name: Install dependencies
        run: |
          sudo apt-get update -yqq
          sudo apt-get install -yqq --no-install-recommends \
            libclang-dev \
            protobuf-compiler
      - name: Install required components
        run: rustup component add rust-src clippy
      - name: Run clippy
        run: cargo clippy --locked -- -D warnings
      - name: Run doc
        run: cargo doc --locked --no-deps